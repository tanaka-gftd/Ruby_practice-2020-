#文字列を含むか判定・・・match?メソッドを使う

#match?メソッドの書式・・・"文字列".macth?(/正規表現パターン/)
#正規表現オブジェクトの指定方法・・・/正規表現パターン/

#match?メソッドの使用例
p "カフェラテ".match?(/ラテ/)
p "ティーラテ".match?(/ラテ/)
p "モカ".match?(/ラテ/)


#文字列が条件と合致するか判定する
p "カフェラテ".match?(/ラテ\z/)
p "ティーラテ".match?(/ラテ\z/)
p "ラテアート".match?(/ラテ\z/)

p "カフェラテ".match?(/\Aラテ/)
p "ティーラテ".match?(/\Aラテ/)
p "ラテアート".match?(/\Aラテ/)

=begin

    正規表現の例：
    \A・・・文字列先頭にマッチするパターン
    \z・・・文字列末尾にマッチするパターン(zは小文字であることに注意)
    []・・・[]で囲まれた文字群のどれか一文字とマッチする
    . ・・・任意の一文字にマッチする（ワイルドカード）
    * ・・・前の文字が0回以上繰り返すときにマッチする（0回以上なので、使われていなくてもマッチする）
    + ・・・前の文字が1回以上繰り返すときにマッチする（少なくとも1回は必要なので、使われていない場合はマッチしない）
    
=end


#条件と合致するものを抽出する・・・match?とifを組合わせれば実現できる
["カフェラテ", "モカ", "コーヒー"].each do |drink|
    puts drink if drink.match?(/ラテ/)   #ラテが含まれるものだけ表示する
end


#条件と合致する文字列を置換する・・・gsubメソッド
#gsubメソッドの使用例
p "カフェラテ".gsub("カフェ", "ティー")   #ティーラテ
p "ラテラテ".gsub("/\Aラテ/", "カフェ")   #カフェラテ
p "ラテラテ".gsub("ラテ", "カフェ")   #カフェカフェ